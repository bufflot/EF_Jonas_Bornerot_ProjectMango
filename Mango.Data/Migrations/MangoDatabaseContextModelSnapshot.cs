// <auto-generated />
using System;
using Mango.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Mango.Data.Migrations
{
    [DbContext(typeof(MangoDatabaseContext))]
    partial class MangoDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mango.Domain.Apple", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<bool>("Organic");

                    b.Property<int>("Price");

                    b.HasKey("Id");

                    b.ToTable("Apples");
                });

            modelBuilder.Entity("Mango.Domain.Banana", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<bool>("Organic");

                    b.Property<int>("Price");

                    b.HasKey("Id");

                    b.ToTable("Bananas");
                });

            modelBuilder.Entity("Mango.Domain.FruitBasket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppleId");

                    b.Property<int?>("BananaId");

                    b.Property<int?>("OrangeId");

                    b.Property<int?>("WaterMelonId");

                    b.HasKey("Id");

                    b.HasIndex("AppleId");

                    b.HasIndex("BananaId");

                    b.HasIndex("OrangeId");

                    b.HasIndex("WaterMelonId");

                    b.ToTable("FruitBaskets");
                });

            modelBuilder.Entity("Mango.Domain.Orange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<bool>("Organic");

                    b.Property<int>("Price");

                    b.HasKey("Id");

                    b.ToTable("Oranges");
                });

            modelBuilder.Entity("Mango.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FruitBasketId");

                    b.HasKey("Id");

                    b.HasIndex("FruitBasketId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Mango.Domain.WaterMelon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<bool>("Organic");

                    b.Property<int>("Price");

                    b.HasKey("Id");

                    b.ToTable("WaterMelons");
                });

            modelBuilder.Entity("Mango.Domain.FruitBasket", b =>
                {
                    b.HasOne("Mango.Domain.Apple", "Apple")
                        .WithMany()
                        .HasForeignKey("AppleId");

                    b.HasOne("Mango.Domain.Banana", "Banana")
                        .WithMany()
                        .HasForeignKey("BananaId");

                    b.HasOne("Mango.Domain.Orange", "Orange")
                        .WithMany()
                        .HasForeignKey("OrangeId");

                    b.HasOne("Mango.Domain.WaterMelon", "WaterMelon")
                        .WithMany()
                        .HasForeignKey("WaterMelonId");
                });

            modelBuilder.Entity("Mango.Domain.Order", b =>
                {
                    b.HasOne("Mango.Domain.FruitBasket", "FruitBasket")
                        .WithMany()
                        .HasForeignKey("FruitBasketId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
